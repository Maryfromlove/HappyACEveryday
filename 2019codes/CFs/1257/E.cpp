/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Tieway59
 */

#include <iostream>
#include <fstream>

#include <iostream>

#define stopSYNC ios::sync_with_stdio(false);cin.tie(nullptr);


using namespace std;

const int MAXN = 2e5 + 59;
int k[5], n;
int dp[MAXN][5];
int tag[MAXN];

class ETheContest {
public:

    void solve(std::istream &in, std::ostream &out) {
        stopSYNC;

        in >> k[1] >> k[2] >> k[3];
        n = k[1] + k[2] + k[3];
        for (int i = 1; i <= 3; i++) {
            for (int id, j = 1; j <= k[i]; ++j) {
                in >> id;
                tag[id] = i;
            }
        }

        for (int i = 1; i <= n; ++i) {
            for (int j = 1; j <= 3; ++j) {
                dp[i][j] = dp[i - 1][j] + (tag[i] != j);
                if (j == 2) {
                    dp[i][j] = min(dp[i][j], dp[i - 1][1] + (tag[i] != j));
                } else if (j == 3) {
                    dp[i][j] = min(dp[i][j], dp[i - 1][1] + (tag[i] != j));
                    dp[i][j] = min(dp[i][j], dp[i - 1][2] + (tag[i] != j));
                }
            }
        }
        out << min(dp[n][1], min(dp[n][2], dp[n][3])) << "\n";
    }
};


int main() {
    ETheContest solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}